"""
Django settings for jczl_pro project.

Generated by 'django-admin startproject' using Django 4.2.20.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# 获取项目根目录
BASE_DIR = Path(__file__).resolve().parent.parent

import os, sys

# 添加应用目录到 Python 路径
sys.path.append(os.path.join(BASE_DIR, 'apps'))
sys.path.append(os.path.join(BASE_DIR))

# 安全密钥，用于加密和解密会话和密码
SECRET_KEY = 'your_generated_secret_key_here'

# 开发模式，True表示开发环境，False表示生产环境
DEBUG = True

# 允许的主机列表，*表示所有主机
ALLOWED_HOSTS = ['*']

# 安装的应用程序列表
INSTALLED_APPS = [
    'simpleui',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'index'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # cors的中间件
]
# 根URL配置
ROOT_URLCONF = 'jczl_pro.urls'
# 模板配置
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, '../templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
# WSGI 应用程序配置
WSGI_APPLICATION = 'jczl_pro.wsgi.application'


# 数据库配置
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'jczl',
        'HOST': '127.0.0.1',
        'PORT': 3306,
        'USER': 'root',
        'PASSWORD': '123456',
    }
}

# 密码验证器配置
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



LANGUAGE_CODE = 'zh-hans'
TIME_ZONE = 'Asia/Shanghai'
USE_I18N = True
USE_TZ = False


# 静态文件配置
STATIC_URL = 'static/'

# 默认自动字段类型
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 日志配置
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(lineno)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(module)s %(lineno)d %(message)s'
        },
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': {
        'console': {
            # 实际开发建议使用WARNING
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'file': {
            # 实际开发建议使用ERROR
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            # 日志位置,日志文件名,日志保存目录必须手动创建，注：这里的文件路径要注意BASE_DIR代表的是小luffyapi
            'filename': os.path.join(os.path.dirname(BASE_DIR), "log", "jczl.log"),
            # 日志文件的最大值,这里我们设置300M
            'maxBytes': 300 * 1024 * 1024,
            # 日志文件的数量,设置最大日志数量为10
            'backupCount': 10,
            # 日志格式:详细格式
            'formatter': 'verbose',
            # 文件内容编码
            'encoding': 'utf-8'
        },
    },
    # 日志对象
    'loggers': {
        'django': {
            'handlers': ['console', 'file'],
            'propagate': True,  # 是否让日志信息继续冒泡给其他的日志处理系统
        },
    }
}
# 异常处理配置
REST_FRAMEWORK = {
    'EXCEPTION_HANDLER': 'utils.exceptions.common_exception_handler',
}
# 媒体文件配置
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


SIMPLEUI_INDEX = '/admin'
SIMPLEUI_LOGO = ('/media/logo.jpg')


SIMPLEUI_CONFIG = {
    'system_keep': False,
    'menu_display': ['数据统计','设置', '信息数据'],  # 开启排序和过滤功能, 不填此字段为默认排序和全部显示, 空列表[] 为全部不显示.
    'dynamic': True,                                # 设置是否开启动态菜单, 默认为False. 如果开启, 则会在每次用户登陆时动态展示菜单内容
    'menus': [

{

            'name': '数据统计',
            'icon': 'fas fa-code',
            'url': '/home/'
        },


        {
            'app': 'index',  # 关联哪个app
            'name': '设置',
            'icon': 'fas fa-user-shield',
            'models': [
                {
                    'name': '基本设置',
                    'icon': 'fa fa-user',
                    'url': 'index/basesettings'
                },
                {
                    'name': '参数设置',
                    'icon': 'fa fa-user',
                    'url': 'index/canshusettings'
                },

            ]
        },
        {
            'app': 'index',  # 关联哪个app
            'name': '信息数据',
            'icon': 'fas fa-user-shield',
            'models': [
                {
                    'name': '用户数据',
                    'icon': 'fa fa-user',
                    'url': 'index/user'
                },
                {
                    'name': '图文表',
                    'icon': 'fa fa-user',
                    'url': 'index/tuwen'
                },
                {
                    'name': '图文类型',
                    'icon': 'fa fa-user',
                    'url': 'index/tuwentype'
                },
                {
                    'name': 'banner',
                    'icon': 'fa fa-user',
                    'url': 'index/banner'
                },

                {
                    'name': '积分记录',
                    'icon': 'fa fa-user',
                    'url': 'index/jifenlog'
                },

                {
                    'name': '异常预警',
                    'icon': 'fa fa-user',
                    'url': 'index/yichang'
                },

                {
                    'name': '异常预警类型',
                    'icon': 'fa fa-user',
                    'url': 'index/yichangtype'
                },

{
                    'name': '投诉',
                    'icon': 'fa fa-user',
                    'url': 'index/tousu'
                },

                {
                    'name': '投诉类型',
                    'icon': 'fa fa-user',
                    'url': 'index/tousutype'
                },
{
                    'name': '纠纷',
                    'icon': 'fa fa-user',
                    'url': 'index/jiufen'
                },

                {
                    'name': '纠纷类型',
                    'icon': 'fa fa-user',
                    'url': 'index/jiufentype'
                },


{
                    'name': '帖子',
                    'icon': 'fa fa-user',
                    'url': 'index/talk'
                },

                {
                    'name': '评论',
                    'icon': 'fa fa-user',
                    'url': 'index/comments'
                },

            ]
        },

    ]
}

SIMPLEUI_HOME_INFO = False
SIMPLEUI_ANALYSIS = False

CSRF_TRUSTED_ORIGINS = ['http://localhost:8000']
# 信任的源列表，用于CSRF保护
